version: '3'

services:

  exim:
    build:
      dockerfile: ./docker/exim/Dockerfile
      context: .
    volumes:
      # volume for store DKIM keys
      - ${DATA_PATH}/exim/etc/ssl/certs/dkim:/etc/ssl/certs/dkim
      # mails
      - ${DATA_PATH}/exim/var/spool:/var/spool
      - ${DATA_PATH}/exim/var/mail:/var/mail
    ports:
      - ${PORT_EXIM}:${PORT_EXIM}
    env_file:
      - .env
    restart: always
    hostname: ${EXIM_DOMAIN}
    # TODO для контейнеров - использовать DNS от docker, а для Exim - DNS контейнера dns, посмотреть как можно это сделать
#    dns: ${IP_DNS_RESOLVER}
    depends_on:
      - dns

  spamassassin:
    build:
      dockerfile: ./docker/spamassassin/Dockerfile
      context: .
    env_file:
      - .env
    depends_on:
      - dns

  mongo:
    image: mongo
    volumes:
      # DB
      - ${DATA_PATH}/mongo/data/db:/data/db
    depends_on:
      - dns

  workspace:
    build:
      dockerfile: ./docker/workspace/Dockerfile
      context: .
    volumes:
      # dev volumes for hot reload
      - ./workspace:/srv/
      # test letters
      - ./test-letters:/srv/test-letters
      # configs
      - ./config/checkdelivery-mails.json:/etc/checkdelivery-mails.json
      - ./config/dnsbl-domains.json:/etc/dnsbl-domains.json
    env_file:
      - .env
    depends_on:
      - api
      - dns

  dns:
    build:
      dockerfile: ./docker/dns/Dockerfile
      context: .
    env_file:
      - .env
    restart: always

  api:
    build:
      dockerfile: ./docker/api/Dockerfile
      context: .
    volumes:
      # TODO собирать на этапе CI/CD
      # configs
      - ./config/checkdelivery-mails.json:/srv/lib/Checkdelivery/checkdelivery-mails.json
      - ./config/dnsbl-domains.json:/srv/lib/Blacklist/dnsbl-domains.json
      # dev volumes for hot reload
      - ./api/index.js:/srv/index.js
      - ./api/worker.js:/srv/worker.js
      - ./api/process-checkdelivery.js:/srv/process-checkdelivery.js
      - ./api/lib:/srv/lib
      - ./api/tools:/srv/tools
      - ./api/test:/srv/test
      # test letters
      - ./test-letters:/test-letters
    env_file:
      - .env
    restart: always
    ports:
      - "80:80"
    depends_on:
      - dns
      - mongo
      - exim
      - spamassassin
      - rabbitmq

  rabbitmq:
    image: rabbitmq:management
    restart: always
    volumes:
      - ${DATA_PATH}/rabbitmq/var/lib/rabbitmq/mnesia:/var/lib/rabbitmq/mnesia
    env_file:
      - .env

