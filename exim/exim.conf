######################################################################
#                  Runtime configuration file for Exim               #
######################################################################

######################################################################
#                    MAIN CONFIGURATION SETTINGS                     #
######################################################################

keep_environment = EXIM_DOMAIN

disable_ipv6 = true

# We accept only local delivery, not open relay
# and send mail only from localhost

domainlist local_domains = ${env{EXIM_DOMAIN}{$value}} : localhost
domainlist relay_to_domains =
hostlist relay_from_hosts = localhost

# Acl
acl_smtp_rcpt =         acl_check_rcpt
.ifdef _HAVE_PRDR
acl_smtp_data_prdr =    acl_check_prdr
.endif
acl_smtp_data =         acl_check_data

# Exim port
daemon_smtp_ports = 25

never_users = root

host_lookup = *

dns_dnssec_ok = 1


# Enable an efficiency feature.  We advertise the feature; clients
# may request to use it.  For multi-recipient mails we then can
# reject or accept per-user after the message is received.
#
.ifdef _HAVE_PRDR
prdr_enable = true
.endif


log_selector = +smtp_protocol_error +smtp_syntax_error \
        +tls_certificate_verified


# This option unfreezes frozen bounce messages, tries
# once more to deliver them, and ignores any delivery failures.

ignore_bounce_errors_after = 1d

# This option cancels (removes) frozen messages

timeout_frozen_after = 2d

# In particular, the Exim maintainers have had multiple reports of problems
# from Russian administrators of issues until they disable this check,
# because of some popular, yet buggy, mail composition software.
check_rfc2047_length = false

######################################################################
#                       ACL CONFIGURATION                            #
#         Specifies access control lists for incoming SMTP mail      #
######################################################################

begin acl

# Connect rate limit
# acl_check_connect:
#  #Log all senders' rate
#  warn ratelimit = 20 / 1h / strict
#         deny message = SENDER RATE: $sender_rate/$sender_rate_period

acl_check_rcpt:

  # Accept if the source is local SMTP (i.e. not over TCP/IP). We do this by
  # testing for an empty sending host field.

  accept  hosts = :
          control = dkim_disable_verify

  deny    message       = Restricted characters in address
          domains       = +local_domains
          local_parts   = ^[.] : ^.*[@%!/|]

  deny    message       = Restricted characters in address
          domains       = !+local_domains
          local_parts   = ^[./|] : ^.*[@%!] : ^.*/\\.\\./

  # Это утверждение требует, чтобы адрес отправителя был проверен до того, как будут последующие проверки ACL.
  # Если проверка неудачна, то отказывается в доставке входящему адресу получателя.
  # Проверка состоит из попытки маршрутизировать адрес, с целью выяснить, можно ли по нему доставить сообщение о рикошете.
  # В случае удалённых адресов, проверяется только домен, но для более точной проверки может использоваться "callouts".
  require verify        = sender

  accept  hosts         = +relay_from_hosts
          control       = submission
          control       = dkim_disable_verify

  # Insist that a HELO/EHLO was accepted.

  require message       = nice hosts say HELO first
          condition     = ${if def:sender_helo_name}

  require message = relay not permitted
          domains = +local_domains : +relay_to_domains

  #############################################################################
  # There are no default checks on DNS black lists because the domains that
  # contain these lists are changing all the time. However, here are two
  # examples of how you can get Exim to perform a DNS black list lookup at this
  # point. The first one denies, whereas the second just warns.
  #
  # deny    message       = rejected because $sender_host_address is in a black list at $dnslist_domain\n$dnslist_text
  #         dnslists      = black.list.example
  #
  # warn    dnslists      = black.list.example
  #         add_header    = X-Warning: $sender_host_address is in a black list at $dnslist_domain
  #         log_message   = found in $dnslist_domain
  #############################################################################

  #############################################################################
  # If doing per-user content filtering then recipients with filters different
  # to the first recipient must be deferred unless the sender talks PRDR.
  #
  # defer  !condition     = $prdr_requested
  #        condition      = ${if > {0}{$receipients_count}}
  #        condition      = ${if !eq {$acl_m_content_filter} \
  #                                  {${lookup PER_RCPT_CONTENT_FILTER}}}
  # warn   !condition     = $prdr_requested
  #        condition      = ${if > {0}{$receipients_count}}
  #        set acl_m_content_filter = ${lookup PER_RCPT_CONTENT_FILTER}
  #############################################################################

  # At this point, the address has passed all the checks that have been
  # configured, so we accept it unconditionally.

  accept


# This ACL is used once per recipient, for multi-recipient messages, if
# we advertised PRDR.  It can be used to perform receipient-dependent
# header- and body- based filtering and rejections.
# We set a variable to record that PRDR was active used, so that checking
# in the data ACL can be skipped.

.ifdef _HAVE_PRDR
acl_check_prdr:
  warn  set acl_m_did_prdr = y
.endif

  #############################################################################
  # do lookup on filtering, with $local_part@$domain, deny on filter match
  #
  # deny      set acl_m_content_filter = ${lookup PER_RCPT_CONTENT_FILTER}
  #           condition    = ...
  #############################################################################

  accept

# This ACL is used after the contents of a message have been received. This
# is the ACL in which you can test a message's headers or body, and in
# particular, this is where you can invoke external virus or spam scanners.
# Some suggested ways of configuring these tests are shown below, commented
# out. Without any tests, this ACL accepts all messages. If you want to use
# such tests, you must ensure that Exim is compiled with the content-scanning
# extension (WITH_CONTENT_SCAN=yes in Local/Makefile).

acl_check_data:

  # Deny if the message contains an overlong line.  Per the standards
  # we should never receive one such via SMTP.
  #
  deny    message    = maximum allowed line length is 998 octets, \
                       got $max_received_linelength
          condition  = ${if > {$max_received_linelength}{998}}

  # Deny if the headers contain badly-formed addresses.
  #
  deny    !verify =     header_syntax
          message =     header syntax
          log_message = header syntax ($acl_verify_message)

  # Accept the message.

  accept



######################################################################
#                      ROUTERS CONFIGURATION                         #
#               Specifies how addresses are handled                  #
######################################################################
#     THE ORDER IN WHICH THE ROUTERS ARE DEFINED IS IMPORTANT!       #
# An address is passed to each router in turn until it is accepted.  #
######################################################################

begin routers

# This router routes addresses that are not in local domains by doing a DNS
# lookup on the domain name. The exclamation mark that appears in "domains = !
# +local_domains" is a negating operator, that is, it can be read as "not". The
# recipient's domain must not be one of those defined by "domainlist
# local_domains" above for this router to be used.
#
# If the router is used, any domain that resolves to 0.0.0.0 or to a loopback
# interface address (127.0.0.0/8) is treated as if it had no DNS entry. Note
# that 0.0.0.0 is the same as 0.0.0.0/32, which is commonly treated as the
# local host inside the network stack. It is not 0.0.0.0/0, the default route.
# If the DNS lookup fails, no further routers are tried because of the no_more
# setting, and consequently the address is unrouteable.


localuser:
  driver = accept
  check_local_user
  transport = local_delivery
  cannot_route_message = Unknown user

catchall_pub:
  driver = redirect
  user = mailtester
  data = mailtester@localhost


######################################################################
#                      TRANSPORTS CONFIGURATION                      #
######################################################################
#                       ORDER DOES NOT MATTER                        #
#     Only one appropriate transport is called for each delivery.    #
######################################################################

# A transport is used only when referenced from a router that successfully
# handles an address.

begin transports

remote_smtp:
  driver = smtp
  message_size_limit = ${if > {$max_received_linelength}{998} {1}{0}}
.ifdef _HAVE_DANE
  dnssec_request_domains = *
  hosts_try_dane = *
.endif
.ifdef _HAVE_PRDR
  hosts_try_prdr = *
.endif


local_delivery:
  driver = appendfile
  directory = $home/mail
  maildir_format
  maildir_use_size_file
  delivery_date_add
  envelope_to_add
  return_path_add



######################################################################
#                      RETRY CONFIGURATION                           #
######################################################################

begin retry

*                      *           F,2h,15m; G,16h,1h,1.5; F,4d,6h



######################################################################
#                      REWRITE CONFIGURATION                         #
######################################################################

begin rewrite



######################################################################
#                   AUTHENTICATION CONFIGURATION                     #
######################################################################

begin authenticators

######################################################################
#                   CONFIGURATION FOR local_scan()                   #
######################################################################
