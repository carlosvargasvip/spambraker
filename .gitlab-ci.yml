stages:
  - build
  - deploy

build dns:
  stage: build
  tags:
    - docker-image-builder
  script:
    - docker build . -f ./docker/dns/Dockerfile -t mailbroker_dns:${CI_COMMIT_SHA} -t mailbroker_dns:latest

build exim:
  stage: build
  tags:
    - docker-image-builder
  script:
    - docker build . -f ./docker/exim/Dockerfile -t mailbroker_exim:${CI_COMMIT_SHA} -t mailbroker_exim:latest

build spamassassin:
  stage: build
  tags:
    - docker-image-builder
  script:
    - docker build . -f ./docker/spamassassin/Dockerfile -t mailbroker_spamassassin:${CI_COMMIT_SHA} -t mailbroker_spamassassin:latest

build api:
  stage: build
  tags:
    - docker-image-builder
  script:
    - docker build . -f ./docker/api/Dockerfile --target production -t mailbroker_api:${CI_COMMIT_SHA} -t mailbroker_api:latest

deploy from docker-compose.deploy.yml:
  stage: deploy
  tags:
    - deploy
  script:
    - DEPLOY_DIR=~/deploy-from-dc/mailbroker
    - DEPLOY_FILE=${DEPLOY_DIR}/docker-compose.yml
    - mkdir -p ${DEPLOY_DIR}
    - cp docker-compose.deploy.yml ${DEPLOY_FILE}
    - docker-compose -f ${DEPLOY_FILE} up -d dns exim spamassassin mongo api rabbitmq

reload Caddy:
  stage: deploy
  when: manual
  tags:
    - deploy
  script:
    - echo "mailbroker.ru reverse_proxy :$API_PORT" | sudo tee /etc/caddy/sites-enabled/mailbroker.ru
    - sudo service caddy reload